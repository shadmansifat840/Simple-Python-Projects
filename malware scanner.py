import os
import hashlib
import psutil

# Define a small database of known malware signatures (Hash-based)
MALWARE_SIGNATURES = {
    "e99a18c428cb38d5f260853678922e03": "Example Malware 1",
    "5d41402abc4b2a76b9719d911017c592": "Example Malware 2"
}

# Function to calculate MD5 hash of a file
def calculate_md5(file_path):
    try:
        with open(file_path, "rb") as f:
            file_hash = hashlib.md5()
            while chunk := f.read(4096):
                file_hash.update(chunk)
        return file_hash.hexdigest()
    except Exception as e:
        return None

# Function to scan a directory for infected files
def scan_directory(directory):
    print(f"\n[üîç] Scanning directory: {directory}")
    infected_files = []

    for root, _, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            file_hash = calculate_md5(file_path)
            if file_hash in MALWARE_SIGNATURES:
                infected_files.append((file_path, MALWARE_SIGNATURES[file_hash]))

    if infected_files:
        print("\nüö® [WARNING] Malware detected!")
        for file, malware_name in infected_files:
            print(f"[‚ö†Ô∏è] {malware_name} found in {file}")
    else:
        print("\n‚úÖ No known malware detected.")

# Function to check running processes for suspicious activity
def check_running_processes():
    print("\n[üîç] Checking running processes for suspicious activity...")
    suspicious_processes = []

    for proc in psutil.process_iter(attrs=["pid", "name", "exe"]):
        try:
            process_path = proc.info["exe"]
            if process_path:
                file_hash = calculate_md5(process_path)
                if file_hash in MALWARE_SIGNATURES:
                    suspicious_processes.append((proc.info["name"], process_path))
        except Exception:
            continue

    if suspicious_processes:
        print("\nüö® [WARNING] Suspicious processes found!")
        for name, path in suspicious_processes:
            print(f"[‚ö†Ô∏è] {name} running from {path} may be malicious.")
    else:
        print("\n‚úÖ No suspicious processes detected.")

# Main function
if __name__ == "__main__":
    user_directory = input("Enter directory to scan (e.g., C:\\\\Users\\\\YourName\\\\Downloads): ").strip()
    scan_directory(user_directory)
    check_running_processes()
